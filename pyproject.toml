[tool.poetry]
name = "heigit-disaster-portal"
version = "0.1.0"
description = "Disaster Area Portal on basic FastAPI infrastructure using Docker, Gunicorn, FastAPI and Python 3.8 on alpine linux"
authors = ["Amandus Butzer <amandus.butzer@heigit.org>", "Takara Baumbach <takara.baumbach@heigit.org"]

[tool.poetry.dependencies]
alembic = "^1.7.7"  # database migration tool
python = "^3.10"
python-dotenv = "^0.21.0"  # reading .env files
fastapi = "^0.85.0"  # api framework
email-validator = "^1.3.0"  # pydantic email validation in api docs
python-multipart = "^0.0.5"  # pydantic file upload and form data in api docs
SQLAlchemy = "^1.4.41"  # orm database interaction
GeoAlchemy2 = "^0.12.5"  # handling geometries with sqlalchemy
aiofiles = "^22.1.0"  # file responses and serving static files
databases =  {version = "^0.6.1", extras = ["postgresql", "sqlite"]}  # async support for PostgreSQL and SQLite
psycopg2-binary = "^2.9.4"  # PostgreSQL adapter
tenacity = "^8.1.0"  # retrying library (waiting for database to restart)
uvicorn = "^0.18.3"  # ASGI server
geopy = "^2.1.0"  # geographic calculation functions
python-dateutil = "^2.8.1"  # correct timestamp parsing
requests = "^2.28.1"  # easy HTTP request interaction
PyYAML = "^6.0"  # YAML support
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
feedparser = "^6.0.10"

[tool.poetry.dev-dependencies]
pytest = "^7.1.3"  # testing
pytest-cov = "^4.0.0"  # test coverage
pytest-asyncio = "^0.19.0"  # async testing
pytest-mock = "^3.10.0"  # mocking responses
httpx = "^0.23.0"  # needed for async testing
black = "^22.10.0"  # TODO: used ?
isort = "^5.10.1"  # TODO: used ?
autoflake = "^1.7.4"  # TODO: used ?
mypy = "^0.982"  # TODO: used ?

[tool.poetry.group.prod.dependencies]
gunicorn = "^20.1.0"

[build-system]
requires = ["poetry>=1.2.1"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"  # recommended unless multiple async frameworks are used
minversion = "7.0"
testpaths = [
    "tests"
]
log_auto_indent = "True"  # auto-indent multilines
